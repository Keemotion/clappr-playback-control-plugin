{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 40015868c8e5cf054514","webpack:///./src/plugin.js","webpack:///./src/style.scss","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/view.html","webpack:///./~/mousetrap/mousetrap.js","webpack:///external \"Clappr\""],"names":[],"mappings":"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;AAEA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA,yCAAwC,gBAAgB;AACxD,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,aAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjDA,oOAAmO,gKAAgK,iPAAiP,kKAAkK,+B;;;;;;;;;ACAtxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA,gBAAe,qBAAqB;AACpC,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA,+CAA8C,EAAE;AAChD;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,QAAQ;AACxB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,MAAM;AACzB,oBAAmB,aAAa;AAChC,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,uCAAuC;AAC9D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,MAAM;AACzB,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,sBAAsB;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,MAAM;AACzB,oBAAmB,SAAS;AAC5B,oBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,oDAAmD,kBAAkB;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,SAAS;AAC5B,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,wDAAuD;AACvD;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,EAAC;;;;;;;;;;AC7gCD,gD","file":"clappr-playback-control-plugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Clappr\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Clappr\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PlaybackControlPlugin\"] = factory(require(\"Clappr\"));\n\telse\n\t\troot[\"PlaybackControlPlugin\"] = factory(root[\"Clappr\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"<%=baseUrl%>/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 40015868c8e5cf054514\n **/","/* global PLUGIN_VERSION */\n// node\n// vendors\nimport { UICorePlugin, template, Events, Styler } from 'clappr';\nimport Mousetrap from 'mousetrap';\n// project\nimport PlaybackControlHTML from './view.html';\nimport PlaybackControlCSS from './style.scss';\n\n// locals\nconst SCALE_FRAMES = 'frames';\nconst SCALE_SECONDS = 'seconds';\nconst BUTTON_STATE_DOWN = 'down';\nconst BUTTON_STATE_UP = 'up';\n\nconst SX_BUTTON_1 = '1';\nconst SX_BUTTON_2 = '2';\nconst SX_BUTTON_3 = '3';\nconst SX_BUTTON_4 = '4';\nconst SX_BUTTON_5 = '5';\n\n// mappings\nvar buttonSecondsNavMap = {};\nbuttonSecondsNavMap[SX_BUTTON_1] = -15;\nbuttonSecondsNavMap[SX_BUTTON_2] = -5;\nbuttonSecondsNavMap[SX_BUTTON_4] = +5;\nbuttonSecondsNavMap[SX_BUTTON_5] = +15;\n\nconst playbackRateMapping = {\n  '-7': -32.0,\n  '-6': -16.0,\n  '-5': -8.0,\n  '-4': -4.0,\n  '-3': -2.0,\n  '-2': -1.0,\n  '-1': -0.5,\n  '0': 0,\n  '1': 0.5,\n  '2': 1.0,\n  '3': 2.0,\n  '4': 4.0,\n  '5': 8.0,\n  '6': 16.0,\n  '7': 32.0\n};\n\nconst defaults = {\n  fps: 29\n};\n\nclass PlaybackControl extends UICorePlugin {\n  // properties\n  get name() { return 'playback_control'; }\n  get version() { return PLUGIN_VERSION; }\n  get template() { return template(PlaybackControlHTML); }\n  get attributes() { return { class: 'playback-control' }; }\n  get mediaControl() { return this.core.mediaControl; }\n  get playback() { return this.core.getCurrentPlayback(); }\n  get player() { return this.mediaControl.container; }\n  get config() { return this.core.options.playbackControlConfig || defaults; }\n  get userInputActionsMap() {\n    const actions = {\n      // frame navigation\n      'nav-frame-dec': {\n        keys: ['left'],\n        events: {\n          keydown: () => this.highlightButton(SCALE_FRAMES, -1, BUTTON_STATE_DOWN),\n          keyup: () => {\n            this.highlightButton(SCALE_FRAMES, -1, BUTTON_STATE_UP);\n            this.seekScaleValue(SCALE_FRAMES, -1);\n          }\n        }\n      },\n      'nav-frame-inc': {\n        keys: ['right'],\n        events: {\n          keydown: () => this.highlightButton(SCALE_FRAMES, +1, BUTTON_STATE_DOWN),\n          keyup: () => {\n            this.highlightButton(SCALE_FRAMES, +1, BUTTON_STATE_UP);\n            this.seekScaleValue(SCALE_FRAMES, +1);\n          }\n        }\n      },\n      // time(second) nagiation\n      'nav-second-dec': {\n        keys: ['down'],\n        events: {\n          keydown: () => this.highlightButton(SCALE_SECONDS, -1, BUTTON_STATE_DOWN),\n          keyup: () => {\n            this.highlightButton(SCALE_SECONDS, -1, BUTTON_STATE_UP);\n            this.seekScaleValue(SCALE_SECONDS, -1);\n          }\n        }\n      },\n      'nav-second-inc': {\n        keys: ['up'],\n        events: {\n          keydown: () => this.highlightButton(SCALE_SECONDS, +1, BUTTON_STATE_DOWN),\n          keyup: () => {\n            this.highlightButton(SCALE_SECONDS, +1, BUTTON_STATE_UP);\n            this.seekScaleValue(SCALE_SECONDS, +1);\n          }\n        }\n      },\n      // second based navigation jumps\n      'nav-second-jmp': {\n        keys: [\n          'alt+shift+1',\n          'alt+shift+2',\n          'alt+shift+3',\n          'alt+shift+4',\n          'alt+shift+5'\n        ],\n        events: {\n          keydown: (e) => {\n            var commandKey = String.fromCharCode(e.keyCode);\n            if (commandKey === SX_BUTTON_3) {\n              // pause/resume\n              this.togglePlayback();\n            } else {\n              // jump seconds\n              var delta = buttonSecondsNavMap[commandKey];\n              this.seekScaleValue(SCALE_SECONDS, delta);\n            }\n          }\n        }\n      },\n      // playback control\n      'playback-pauseresume': {\n        keys: ['p'],\n        events: {\n          keypress: () => this.togglePlayback\n        }\n      },\n      'playback-switchrate': {\n        keys: [\n          'ctrl+shift+alt+2',\n          'ctrl+shift+alt+3',\n          'ctrl+shift+alt+4',\n          'ctrl+shift+alt+5',\n          'ctrl+shift+alt+6',\n          'ctrl+shift+alt+7',\n          'ctrl+shift+alt+8',\n          'ctrl+shift+1', // reset to pause\n          'ctrl+shift+2',\n          'ctrl+shift+3',\n          'ctrl+shift+4',\n          'ctrl+shift+5',\n          'ctrl+shift+6',\n          'ctrl+shift+7',\n          'ctrl+shift+8'\n        ],\n        events: {\n          keydown: (e) => {\n            var value = String.fromCharCode(e.keyCode);\n            var sign = e.altKey ? -1 : 1;\n            var key = (Number(value) - 1) * sign;\n            var rate = playbackRateMapping[key];\n            this.setManualPlaybackRate(rate);\n          }\n        }\n      }\n    };\n    return actions;\n  }\n  setManualPlaybackRate(rate) {\n    // do nothing when current rate is equal to received\n    if (rate === this.manualPlaybackRate) {\n      return;\n    }\n    // clear previous virtual playhead\n    this.manualPlaybackRate = rate;\n    clearInterval(this.manualPlaybackId);\n    // edge case - 0 means stop motion\n    if (Number(rate) === 0) {\n      this.player.pause();\n      return;\n    }\n    //\n    const updateInterval = 0.1; // every 100 milliseconds\n    this.manualPlaybackId = setInterval(() => {\n      this.playback.trigger('seeking');\n      var destination = updateInterval * rate;\n      if (this.playback.bufferingState) {\n        console.warn('cannot seek - buffering, skip at twice the distance');\n        this.seekTime(2 * destination);\n      } else {\n        this.seekTime(destination);\n      }\n      this.playback.trigger('waiting');\n    }, updateInterval * 1000);\n  }\n  togglePlayback() {\n    if (this.player.isPlaying()) {\n      this.player.pause();\n    } else {\n      this.player.play();\n    }\n  }\n  // methods\n  onContainerChanged() {\n    this.invalidate();\n  }\n  findButton(scale, value) {\n    const signed = value > 0 ? `+${value}` : value;\n    return this.$el.find(`[data-step-scale=\"${scale}\"][data-step-value=\"${signed}\"]`);\n  }\n  highlightButton(scale, value, state) {\n    const button = this.findButton(scale, value);\n    switch (state) {\n    case BUTTON_STATE_DOWN:\n      button.children()[1].className = 'playback-control-action-highlight';\n      break;\n    case BUTTON_STATE_UP:\n      button.children()[1].className = '';\n      break;\n    default:\n      break;\n    }\n    return button;\n  }\n  onButtonClick(e) {\n    const sender = e.currentTarget;\n    const scale = sender.getAttribute('data-step-scale');\n    const value = Number(sender.getAttribute('data-step-value'));\n    // control player\n    this.seekScaleValue(scale, value);\n  }\n  onActionsMouseWheel(e) {\n    const sender = e.currentTarget;\n    const scale = sender.getAttribute('data-step-scale');\n    const value = ((e.detail < 0) || (e.wheelDelta > 0)) ? 1 : -1;\n    this.seekScaleValue(scale, value);\n    e.stopPropagation();\n    e.preventDefault();\n    return false;\n  }\n  bindEvents() {\n    // discard default clappr events\n    // const config = this.config;\n    this.listenTo(this.mediaControl, Events.MEDIACONTROL_RENDERED, this.render);\n    this.listenTo(this.mediaControl, Events.MEDIACONTROL_CONTAINERCHANGED, this.onContainerChanged);\n    // non-clappr events\n    Mousetrap.reset();\n    for (let [, userAction] of Object.entries(this.userInputActionsMap)) {\n      for (let [event, callback] of Object.entries(userAction.events)) {\n        Mousetrap.bind(userAction.keys, callback, event);\n      }\n    }\n  }\n  stopListening() {\n    super.stopListening();\n    // non-clappr events\n    if (this.onMouseWheelDelegate) {\n      this.onMouseWheelDelegate.unbind();\n      this.onMouseWheelDelegate = null;\n    }\n    // remove virtual playback artifacts\n    this.manualPlaybackRate = 0;\n    clearInterval(this.manualPlaybackId);\n  }\n  render() {\n    const style = Styler.getStyleFor(PlaybackControlCSS);\n    this.$el\n      .html(this.template())\n      .append(style);\n    this.$el\n      .find('[type=\"button\"]')\n      .off('click')\n      .on('click', this.onButtonClick.bind(this));\n    this.$el\n      .find('.playback-control-actions')\n      .off('DOMMouseScroll')\n      .on('DOMMouseScroll', this.onActionsMouseWheel.bind(this));\n    this.$el\n      .find('.playback-control-actions')\n      .off('mousewheel')\n      .on('mousewheel', this.onActionsMouseWheel.bind(this));\n    this.mediaControl\n      .$('.media-control-left-panel[data-media-control]')\n      .append(this.el);\n    return this;\n  }\n  invalidate() {\n    this.stopListening();\n    this.bindEvents();\n  }\n  getFPS() {\n    let fps = defaults.fps;\n    if (this.player && this.player.options && this.player.options.playbackControl) {\n      fps = this.player.options.playbackControl.fps || fps;\n    }\n    return fps;\n  }\n  seekRelativeFrames(frames) {\n    const player = this.player;\n    if (player.isPlaying()) {\n      player.pause();\n    }\n    const currentTime = player.getCurrentTime();\n    const targetTime = currentTime + (frames / this.getFPS());\n    if ((targetTime <= 0) || (targetTime >= player.getDuration())) {\n      // TODO: decide on how to norm bounds\n    } else {\n      const playback = this.core.getCurrentPlayback();\n      player.seek(targetTime);\n      // Trigger the waiting event that will buffer the video if targetTime is not buffered yet\n      const bufferedTimeRange = playback.el.buffered;\n      let targetFrameBuffered = false;\n      for (let i = 0; i < bufferedTimeRange.length; i++) {\n        if ((targetTime >= bufferedTimeRange.start(i)) && (targetTime <= bufferedTimeRange.end(i))) {\n          targetFrameBuffered = true;\n          break;\n        }\n      }\n      if (!targetFrameBuffered) {\n        playback.trigger('waiting');\n      }\n    }\n  }\n  seekRelativeSeconds(seconds) {\n    const player = this.player;\n    if (player.isPlaying()) {\n      player.pause();\n    }\n    let position = player.getCurrentTime() + seconds;\n    if (position < 0) {\n      position = 0;\n    } else if (position > player.getDuration()) {\n      position = player.getDuration();\n    }\n    if ((position === null) || isNaN(position)) {\n      console.error('Invalid seek position');\n    } else {\n      player.seek(position);\n    }\n  }\n  seekTime(time) {\n    return this.mediaControl.seekRelative(time);\n  }\n  seekScaleValue(scale, value) {\n    switch (scale) {\n    case SCALE_FRAMES:\n      this.seekRelativeFrames(value);\n      break;\n    case SCALE_SECONDS:\n      this.seekRelativeSeconds(value);\n      break;\n    default:\n      break;\n    }\n  }\n}\n\nexport default PlaybackControl;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/plugin.js\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"[data-player] div.playback-control {\\n  float: left; }\\n  [data-player] div.playback-control > .playback-control-actions {\\n    display: inline-block;\\n    margin-left: 1px;\\n    margin-right: 1px;\\n    height: 28px; }\\n    [data-player] div.playback-control > .playback-control-actions:hover {\\n      background: #eee; }\\n    [data-player] div.playback-control > .playback-control-actions > button {\\n      outline: none;\\n      cursor: pointer;\\n      border: 1px solid #444;\\n      margin: 1px;\\n      text-align: center;\\n      width: 35px;\\n      height: 26px; }\\n      [data-player] div.playback-control > .playback-control-actions > button > sub {\\n        outline: none;\\n        position: relative;\\n        display: inline-block;\\n        background: #eee;\\n        border-radius: 15px;\\n        width: 25px;\\n        border: 1px solid;\\n        left: -2px;\\n        bottom: 0;\\n        font-weight: bold;\\n        font-family: Consolas, Lucida Console, Monaco, monospace;\\n        font-size: 11px; }\\n        [data-player] div.playback-control > .playback-control-actions > button > sub.playback-control-action-highlight {\\n          background: #febf04;\\n          border-color: #333;\\n          color: #333;\\n          position: relative;\\n          top: 1px;\\n          left: 1px; }\\n      [data-player] div.playback-control > .playback-control-actions > button:hover {\\n        background: #333;\\n        color: #eee; }\\n        [data-player] div.playback-control > .playback-control-actions > button:hover > sub {\\n          border-color: #eee;\\n          color: #333; }\\n      [data-player] div.playback-control > .playback-control-actions > button:active {\\n        background: #666;\\n        color: #333;\\n        border-color: #111;\\n        position: relative;\\n        top: 1px; }\\n        [data-player] div.playback-control > .playback-control-actions > button:active > sub {\\n          background: #111;\\n          color: #666;\\n          border-color: #111;\\n          font-weight: bold; }\\n    [data-player] div.playback-control > .playback-control-actions > button::-moz-focus-inner {\\n      border: 0; }\\n  [data-player] div.playback-control > .playback-control-actions[data-step-scale=\\\"seconds\\\"] > button {\\n    background: #00b7ea; }\\n  [data-player] div.playback-control > .playback-control-actions[data-step-scale=\\\"frames\\\"] > button {\\n    background: #d2ff52; }\\n\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/style.scss\n ** module id = 1\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"playback-control-actions\\\" data-step-scale=\\\"frames\\\">\\n  <button type=\\\"button\\\" data-step-value=\\\"-1\\\" data-step-scale=\\\"frames\\\" title=\\\"Step 1 frame backward\\\">\\n    <p>-1</p>\\n    <sub>&larr;</sub>\\n  </button>\\n  <button type=\\\"button\\\" data-step-value=\\\"+1\\\" data-step-scale=\\\"frames\\\" title=\\\"Step 1 frame forward\\\">\\n    <p>+1</p>\\n    <sub>&rarr;</sub>\\n  </button>\\n</div>\\n<div class=\\\"playback-control-actions\\\" data-step-scale=\\\"seconds\\\">\\n  <button type=\\\"button\\\" data-step-value=\\\"-1\\\" data-step-scale=\\\"seconds\\\" title=\\\"Step 1 second backward\\\">\\n    <p>-1</p>\\n    <sub>&darr;</sub>\\n  </button>\\n  <button type=\\\"button\\\" data-step-value=\\\"+1\\\" data-step-scale=\\\"seconds\\\" title=\\\"Step 1 second forward\\\">\\n    <p>+1</p>\\n    <sub>&uarr;</sub>\\n  </button>\\n</div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/view.html\n ** module id = 3\n ** module chunks = 0\n **/","/*global define:false */\n/**\n * Copyright 2016 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.0\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n        _MAP[i + 96] = i;\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mousetrap/mousetrap.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Clappr\"\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}